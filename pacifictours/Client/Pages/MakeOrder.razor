@page "/makeorder"
@page "/makeorder/{id:int}"
@using pacifictours.Shared;
@inject NavigationManager NavigationManager
@inject HttpClient Http



@if(Id is null)
{
<PageTitle> Create a new order </PageTitle>
<h3>Add a New Employee </h3>
}
else{
	<PageTitle> Edit @order.name</PageTitle>
	<h3>Edit @order.name</h3>
}
<EditForm Model = "order" OnSubmit="HandleSubmit">
	<div>	
		<label for = "HotelNumber">Hotel number</label>
		<InputNumber id = "HotelNumber" @bind-Value = "order.HotelId" class = "from-control" />
	</div> <br />

	<div>
		<label for="hotelname">Hotel name</label>
		<InputText id="hotelname" @bind-Value="order.roomType" class="from-control" />
	</div> <br />

	<div>
		<label for="TourNumber">Tour number</label>
		<InputNumber id="TourNumber" @bind-Value="order.TourId" class="from-control" />
	</div> <br />

	<div>
		<label for="tourname">Tour name</label>
		<InputText id="tourname" @bind-Value="order.tourType" class="from-control" />
	</div> <br />

	<div>
		<label for="PhoneNum">Phone number</label>
		<InputNumber id="PhoneNum" @bind-Value="order.contactNum" class="from-control" />
	</div> <br />

	<div>
		<label for="PassportNum">Passport number</label>
		<InputNumber id="PassportNum" @bind-Value="order.passportNum" class="from-control" />
	</div> <br />


	<button type="submit" class="btn btn-primary">Place order</button>
</EditForm>

@code {
	[Parameter] 
	public int? Id { get; set; }
	Order order = new Order { name = "New order" };
	async Task HandleSubmit()
	{
		if (Id is null)
		{
			await Http.PostAsJsonAsync("api/order", order);
		}
		else
		{
			await Http.PutAsJsonAsync($"api/order/{Id}", order);
		}
	}
	

}

